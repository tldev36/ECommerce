import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";
import { slugify } from "@/utils/slugify"; // file util nh·ªè ƒë·ªÉ t·∫°o slug

// üîπ L·∫•y t·∫•t c·∫£ categories
export async function GET() {
  try {
    const data = await prisma.categories.findMany({
      orderBy: { id: "desc" },
    });
    return NextResponse.json(data);
  } catch (error) {
    console.error("GET categories error:", error);
    return NextResponse.json({ error: "L·ªói khi l·∫•y d·ªØ li·ªáu" }, { status: 500 });
  }
}

// üîπ T·∫°o m·ªõi
export async function POST(req: Request) {
  try {
    const { name, image, status } = await req.json();
    const slug = slugify(name);

    const newCategory = await prisma.categories.create({
      data: { name, slug, image, status },
    });

    return NextResponse.json(newCategory);
  } catch (error) {
    console.error("POST categories error:", error);
    return NextResponse.json({ error: "L·ªói khi th√™m m·ªõi" }, { status: 500 });
  }
}
