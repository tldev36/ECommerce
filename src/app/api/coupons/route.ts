import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma"; // âœ… báº¡n cáº§n file nÃ y (hÆ°á»›ng dáº«n bÃªn dÆ°á»›i)

// ðŸŸ¢ Láº¥y danh sÃ¡ch coupons
export async function GET() {
  try {
    const coupons = await prisma.coupons.findMany({
      orderBy: { created_at: "desc" },
    });

    // Convert Decimal -> number Ä‘á»ƒ trÃ¡nh lá»—i JSON
    const formatted = coupons.map((c) => ({
      ...c,
      discount_percent: c.discount_percent
        ? Number(c.discount_percent)
        : null,
    }));

    return NextResponse.json(formatted);
  } catch (err) {
    console.error("Lá»—i khi láº¥y danh sÃ¡ch coupons:", err);
    return NextResponse.json({ error: "Lá»—i server" }, { status: 500 });
  }
}

// ðŸŸ¢ Táº¡o coupon má»›i
export async function POST(req: Request) {
  try {
    const data = await req.json();
    const newCoupon = await prisma.coupons.create({
      data: {
        code: data.code,
        description: data.description,
        discount_percent: data.discount_percent,
        valid_from: data.valid_from ? new Date(data.valid_from) : null,
        valid_until: data.valid_until ? new Date(data.valid_until) : null,
        usage_limit: data.usage_limit ?? null,
      },
    });

    return NextResponse.json(newCoupon, { status: 201 });
  } catch (err: any) {
    console.error("Lá»—i khi táº¡o coupon:", err);
    return NextResponse.json(
      { error: err.message || "KhÃ´ng thá»ƒ táº¡o coupon" },
      { status: 500 }
    );
  }
}
