import { NextResponse } from "next/server";
import { prisma } from "@/lib/prisma";

export async function POST(req: Request) {
  try {
    const { code } = await req.json();

    if (!code || code.trim() === "") {
      return NextResponse.json(
        { error: "Vui l√≤ng nh·∫≠p m√£ gi·∫£m gi√°" },
        { status: 400 }
      );
    }

    // üîç T√¨m m√£ gi·∫£m gi√° trong DB
    const coupon = await prisma.coupons.findFirst({
      where: {
        code: code.trim().toUpperCase(),
        status: "1", // ch·ªâ l·∫•y m√£ ƒëang ho·∫°t ƒë·ªông
      },
    });

    if (!coupon) {
      return NextResponse.json(
        { valid: false, message: "M√£ gi·∫£m gi√° kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã v√¥ hi·ªáu h√≥a" },
        { status: 404 }
      );
    }

    const now = new Date();

    // ‚è∞ Ki·ªÉm tra th·ªùi h·∫°n
    if (
      (coupon.valid_from && now < coupon.valid_from) ||
      (coupon.valid_until && now > coupon.valid_until)
    ) {
      return NextResponse.json(
        { valid: false, message: "M√£ gi·∫£m gi√° ƒë√£ h·∫øt h·∫°n ho·∫∑c ch∆∞a ƒë·∫øn th·ªùi gian s·ª≠ d·ª•ng" },
        { status: 400 }
      );
    }

    // üî¢ Ki·ªÉm tra l∆∞·ª£t s·ª≠ d·ª•ng (n·∫øu c√≥)
    if (coupon.usage_limit !== null && coupon.usage_limit <= 0) {
      return NextResponse.json(
        { valid: false, message: "M√£ gi·∫£m gi√° ƒë√£ h·∫øt l∆∞·ª£t s·ª≠ d·ª•ng" },
        { status: 400 }
      );
    }

    // ‚úÖ M√£ h·ª£p l·ªá ‚Üí tr·∫£ v·ªÅ th√¥ng tin gi·∫£m gi√°
    return NextResponse.json({
      valid: true,
      message: "√Åp d·ª•ng m√£ gi·∫£m gi√° th√†nh c√¥ng",
      discount_percent: coupon.discount_percent
        ? Number(coupon.discount_percent)
        : null,
      discount_amount: coupon.discount_amount
        ? Number(coupon.discount_amount)
        : null,
    });
  } catch (err) {
    console.error("‚ùå L·ªói khi ki·ªÉm tra m√£ gi·∫£m gi√°:", err);
    return NextResponse.json(
      { valid: false, error: "ƒê√£ x·∫£y ra l·ªói khi ki·ªÉm tra m√£ gi·∫£m gi√°" },
      { status: 500 }
    );
  }
}
